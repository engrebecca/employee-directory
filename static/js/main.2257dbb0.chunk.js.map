{"version":3,"sources":["components/Wrapper/index.js","components/Jumbotron/index.js","components/Container/index.js","components/Header/index.js","utils/employeeContext.js","components/Directory/index.js","utils/filterContext.js","components/Filter/index.js","utils/sortContext.js","components/SortField/index.js","utils/orderContext.js","components/OrderField/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Jumbotron","Container","Header","EmployeeContext","React","createContext","firstname","lastname","email","position","department","image","Directory","employees","useContext","map","employee","i","src","alt","FilterContext","filter","onChange","Filter","handleFilterInput","id","type","placeholder","value","SortContext","fieldToSortBy","fields","Sort","handleSortInput","key","text","OrderContext","sortOrder","Order","handleSortOrder","App","useState","setEmployees","setFilter","setFieldToSortBy","setSortOrder","useEffect","Employees","filterRegExp","RegExp","Provider","e","target","test","sort","a","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2257dbb0.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4 text-center align-middle\">The Office Employee Directory</h1>\n                {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/9/9c/Dunder_Mifflin%2C_Inc.svg\"></img> */}\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n    // Container to hold all the rendered employees\n    return <div className=\"form-format\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    // Header for all the information fields of the employee directory\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-2 header-format\">\n                    Photo\n                </div>\n                <div className=\"col-2 header-format\">\n                    First Name\n                </div>\n                <div className=\"col-2 header-format\">\n                    Last Name\n                </div>\n                <div className=\"col-2 header-format\">\n                    Position\n                </div>\n                <div className=\"col-2 header-format\">\n                    Department\n                </div>\n                <div className=\"col-2 header-format\">\n                    Email\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\nconst EmployeeContext = React.createContext({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    position: \"\",\n    department: \"\",\n    image: \"\"\n});\n\nexport default EmployeeContext;\n","import React, { useContext } from \"react\";\nimport EmployeeContext from \"../../utils/employeeContext\";\nimport \"./style.css\";\n\nfunction Directory() {\n    const employees = useContext(EmployeeContext);\n\n    // Returns a row for each employee in the employees array which can be updated based on a user set filter or sort\n    return (<>\n        {employees.map((employee, i) => (\n            <div className=\"container\" key={i}>\n                <div className=\"row\">\n                    <div className=\"col-2 center-text\">\n                        <img src={employee.image} alt={employee.firstname} className=\"img-thumbnail\"></img>\n                    </div>\n                    <div className=\"col-2 center-text\">\n                        {employee.firstname}\n                    </div>\n                    <div className=\"col-2 center-text\">\n                        {employee.lastname}\n                    </div>\n                    <div className=\"col-2 center-text\">\n                        {employee.position}\n                    </div>\n                    <div className=\"col-2 center-text\">\n                        {employee.department}\n                    </div>\n                    <div className=\"col-2 center-text\">\n                        {employee.email}\n                    </div>\n                </div>\n            </div>\n        ))\n        }</>\n    );\n}\n\nexport default Directory;","import React from \"react\";\n\nconst FilterContext = React.createContext({\n    filter: \"\",\n    onChange: () => { }\n});\n\nexport default FilterContext;\n","import React, { useContext } from \"react\";\nimport FilterContext from \"../../utils/filterContext\";\n\nfunction Filter() {\n    const { filter, handleFilterInput } = useContext(FilterContext);\n\n    // Returns input field for filtering by employee first name\n    return (\n        <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Filter by Name</span>\n            </div>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter First Name\" value={filter} onChange={handleFilterInput} />\n        </div>\n    );\n}\n\nexport default Filter;","import React from \"react\";\n\nconst SortContext = React.createContext({\n    fieldToSortBy: \"\",\n    fields: [],\n    onChange: () => { }\n});\n\nexport default SortContext;\n","import React, { useContext } from \"react\";\nimport SortContext from \"../../utils/sortContext\";\n\nfunction Sort() {\n    const { fieldToSortBy, fields, handleSortInput } = useContext(SortContext);\n\n    // Returns form for sorting by employees by first name, last name, position, department, or email\n    return (\n        <select className=\"form-control\" value={fieldToSortBy} onChange={handleSortInput}>\n            <>\n                {fields.map(({ key, text }) => (<option key={key} value={key}>{text}</option>))}\n            </>\n        </select>\n    );\n}\n\nexport default Sort;","import React from \"react\";\n\nconst OrderContext = React.createContext({\n    sortOrder: 1,\n    onChange: () => { }\n});\n\nexport default OrderContext;\n","import React, { useContext } from \"react\";\nimport OrderContext from \"../../utils/orderContext\";\n\nfunction Order() {\n    const { sortOrder, handleSortOrder } = useContext(OrderContext);\n\n    // Returns form for sorting fields A-Z or Z-A\n    return (\n        <select className=\"form-control\" value={sortOrder} onChange={handleSortOrder}>\n            <option value={1}>A-Z</option>\n            <option value={-1}>Z-A</option>\n        </select>\n    );\n}\n\nexport default Order;","import React, { useEffect, useState } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Container from \"./components/Container\";\nimport Header from \"./components/Header\";\nimport Employees from \"./employees.json\"\nimport Directory from \"./components/Directory\";\nimport EmployeeContext from \"./utils/employeeContext\";\nimport FilterContext from \"./utils/filterContext\";\nimport Filter from \"./components/Filter\";\nimport SortContext from \"./utils/sortContext\";\nimport Sort from \"./components/SortField\";\nimport OrderContext from \"./utils/orderContext\";\nimport Order from \"./components/OrderField\";\n\n// Array that holds all the field names of the employee directory, to reference for filtering and sorting\nconst fields = [{ key: \"firstname\", text: \"First Name\" }, { key: \"lastname\", text: \"Last Name\" }, { key: \"position\", text: \"Position\" }, { key: \"department\", text: \"Department\" }, { key: \"email\", text: \"Email\" }]\n\nfunction App() {\n    // Setting useState hook for employees array, filter, sort field, and sort order\n    // Enables one to keep track of the current state and update state for each of these\n    const [employees, setEmployees] = useState([]);\n    const [filter, setFilter] = useState(\"\")\n    const [fieldToSortBy, setFieldToSortBy] = useState(\"firstname\");\n    const [sortOrder, setSortOrder] = useState(1);\n\n    // useEffect hook that sets employees array to be the array from employees.json when page mounts\n    useEffect(() => {\n        setEmployees(Employees)\n    }, []);\n\n    // Creating a RegExp that is the first name that must be matched in the name filter\n    const filterRegExp = new RegExp(filter, \"i\");\n\n    // Updates filter value to user input whenever there is a change to value in the input field\n    function handleFilterInput(e) {\n        setFilter(e.target.value)\n    };\n\n    // Updates fieldToSortBy to user input whenever there is a change to the value in the drop down menu\n    function handleSortInput(e) {\n        setFieldToSortBy(e.target.value)\n    };\n\n    // Updates sortOrder to user input whenever there is a change to the value in the drop down menu\n    function handleSortOrder(e) {\n        setSortOrder(+e.target.value)\n    };\n\n    return (\n        <div>\n            <Jumbotron></Jumbotron>\n            <Container>\n                <FilterContext.Provider value={{ filter, handleFilterInput }}>\n                    {/* Input field for first name to filter by, updates filter to be the user's input */}\n                    <Filter></Filter>\n                </FilterContext.Provider>\n                <SortContext.Provider value={{ fieldToSortBy, fields, handleSortInput }}>\n                    {/* Drop down menu for field to sort by, updates fieldToSortBy to be user's input*/}\n                    <Sort></Sort>\n                </SortContext.Provider>\n\n                <OrderContext.Provider value={{ sortOrder, handleSortOrder }}>\n                    {/* Drop down menu for selecting sort order, updates sortOrder to be the user's input*/}\n                    <Order></Order>\n                </OrderContext.Provider>\n            </Container>\n            <Wrapper>\n                <Header></Header>\n                {/* Section that renders all employees from employees state*/}\n                <EmployeeContext.Provider value={\n                    // Providing EmployeeContext child, Directory, with access to the employees state and ability to filter and sort employees\n                    employees\n                        .filter((employee) => filterRegExp.test(employee.firstname))\n                        .sort((a, b) => {\n                            if (a[fieldToSortBy] < b[fieldToSortBy]) return -sortOrder\n                            if (a[fieldToSortBy] > b[fieldToSortBy]) return sortOrder\n                            return 0\n                        })\n                }>\n                    <Directory></Directory>\n                </EmployeeContext.Provider>\n            </Wrapper>\n        </div >\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}